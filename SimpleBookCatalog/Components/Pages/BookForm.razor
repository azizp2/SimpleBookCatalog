@inject IBookRepo Repo

@if(Book is not null)
{

            <EditForm Enhance=true method="post" FormName="AddOrEditBookForm" OnValidSubmit="AddOrEditBook" Model="Book">
                <h3>@title</h3>
                @if (isEditMode)
                {
                <input type="hidden" name="Book.Id" value="@Book.Id" />
                }
                <div class="mb-3">
                    <label for="title" class="form-label">
                        Title
                    </label>
                    <InputText id="title" @bind-Value="Book.Title" class="form-control shadow-none" />
                </div>

                <div class="mb-3">
                    <label for="author" class="form-label">
                        Author
                    </label>
                    <InputText id="author" @bind-Value="Book.Author" class="form-control shadow-none" />
                </div>

                <div class="mb-3">
                    <label for="publication-date" class="form-label">
                        Publication Date
                    </label>
                    <InputDate id="publication-date" @bind-Value="Book.PublicationDate" class="form-control shadow-none" />
                </div>

                <div class="mb-3">
                    <label for="category" class="form-label">
                        Category
                    </label>
                    <InputSelect id="category" @bind-Value="Book.Category" class="form-control shadow-none">
                        <option value="0">
                            Select Category
                        </option>
                        @foreach (var category in Enum.GetValues(typeof(Category)))
                        {
                            <option value="@category">@category.ToString()</option>
                        }
                    </InputSelect>
                </div>
                <div class="mb-3">
                    <button class="btn btn-primary shadow-none">Submit</button>
                    <a href="/" class="btn btn-warning shadow-none ms-3">Back to List</a>
                </div>
                <DataAnnotationsValidator />
                <ValidationSummary />
            </EditForm>
}

@code {
    [Parameter]
    public bool isEditMode { get; set; } = false;

    [Parameter]
    public int BookId { get; set; }

    [Parameter]
    public EventCallback<Book> OnValidBookSubmit { get; set; }


    [SupplyParameterFromForm]
    public Book? Book { get; set; }

    private string title => isEditMode ? $"Edit Book {BookId}" : "Add New Book";

    protected override async Task OnInitializedAsync()
    {
        if(isEditMode)
        {
            Book ??= await Repo.GetByIdAsync(BookId);
        }
        else
        {
            Book ??= new();
        }

    }

    public async Task AddOrEditBook()
    {

            await OnValidBookSubmit.InvokeAsync(Book);
     
    }
}
